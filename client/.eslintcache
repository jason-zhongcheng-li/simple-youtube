[{"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/index.js":"1","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/reportWebVitals.js":"2","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloProvider.js":"3","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloClient.js":"4","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/routes/Routes.js":"5","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Header.js":"6","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/NavBar.js":"7","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Link.js":"8","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Loading.js":"9","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/containers/video-upload.js":"10","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/containers/video-list.js":"11","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/components/VideoCards.js":"12","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/components/VideoCard.js":"13"},{"size":680,"mtime":1607177212381,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607139343507,"results":"16","hashOfConfig":"15"},{"size":353,"mtime":1607143785071,"results":"17","hashOfConfig":"15"},{"size":530,"mtime":1607181715993,"results":"18","hashOfConfig":"15"},{"size":592,"mtime":1607177893732,"results":"19","hashOfConfig":"15"},{"size":308,"mtime":1607148329390,"results":"20","hashOfConfig":"15"},{"size":207,"mtime":1607142076980,"results":"21","hashOfConfig":"15"},{"size":298,"mtime":1607141927192,"results":"22","hashOfConfig":"15"},{"size":326,"mtime":1607154152181,"results":"23","hashOfConfig":"15"},{"size":2022,"mtime":1607182500958,"results":"24","hashOfConfig":"15"},{"size":572,"mtime":1607182509914,"results":"25","hashOfConfig":"15"},{"size":479,"mtime":1607182424552,"results":"26","hashOfConfig":"15"},{"size":1570,"mtime":1607182451967,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11wvqdz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/index.js",[],["57","58"],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/reportWebVitals.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloProvider.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloClient.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/routes/Routes.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Header.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/NavBar.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Link.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Loading.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/containers/video-upload.js",["59","60"],"import React, { useCallback } from 'react';\nimport gql from 'graphql-tag';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loading from '../../../components/Loading';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst uploadFileMutation = gql`\n  mutation UploadFile($file: Upload!, $size: Float!, $timestamp: Float!) {\n    uploadFile(file: $file, size: $size, timestamp: $timestamp){\n      success,\n      message\n    }\n  }\n`;\n\nconst VideoUpload = () => {\n\n  const [uploadFile, { loading, data, error }] = useMutation(uploadFileMutation, {\n    onCompleted(data) {\n      if (data.uploadFile.success) {\n        toast.success(data.uploadFile.message);\n      } else {\n        toast.error(data.uploadFile.message);\n      }\n    }\n  });\n\n  const onDrop = useCallback(\n    ([file]) => {\n      uploadFile({ variables: { file, size: file.size, timestamp: file.lastModified } });\n    },\n    [uploadFile]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  if (loading) return <Loading />;\n\n  return (\n\n    <div className=\"container-form\" style={{ width: \"max 30%\" }}>\n      <div className=\"row\">\n        <div className=\"offset-md-6\">\n          <div className=\"form-group\">\n            <div {...getRootProps()} className=\"files\">\n              <input {...getInputProps()} className=\"files\" />\n            </div>\n            <Typography variant=\"h4\" gutterBottom>\n              {isDragActive ? (\n                <p style={{ color: 'initial' }}>Drop the files here ...</p>\n              ) : (\n                  <p style={{ color: 'initial' }}>Drag 'n' drop some files here, or click to select files</p>\n                )}\n            </Typography>\n\n          </div>\n          <div className=\"form-group\">\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n}\n\nexport default VideoUpload;\n","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/containers/video-list.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/components/VideoCards.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/app/video/components/VideoCard.js",["61"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"10px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst VideoCard = props => {\n\n  const { video } = props;\n\n  const classes = useStyles();\n  return (\n    <Card className={classes.root} >\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://youtu.be/il9SZU_nsVc\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default VideoCard;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":21,"column":33,"nodeType":"68","messageId":"69","endLine":21,"endColumn":37},{"ruleId":"66","severity":1,"message":"70","line":21,"column":39,"nodeType":"68","messageId":"69","endLine":21,"endColumn":44},{"ruleId":"66","severity":1,"message":"71","line":23,"column":11,"nodeType":"68","messageId":"69","endLine":23,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'video' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]