[{"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/index.js":"1","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/reportWebVitals.js":"2","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloProvider.js":"3","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloClient.js":"4","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/routes/Routes.js":"5","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Header.js":"6","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/NavBar.js":"7","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Link.js":"8","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/containers/video-upload.js":"9","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Loading.js":"10"},{"size":649,"mtime":1607153943171,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1607139343507,"results":"13","hashOfConfig":"12"},{"size":353,"mtime":1607143785071,"results":"14","hashOfConfig":"12"},{"size":344,"mtime":1607143418124,"results":"15","hashOfConfig":"12"},{"size":503,"mtime":1607152567981,"results":"16","hashOfConfig":"12"},{"size":308,"mtime":1607148329390,"results":"17","hashOfConfig":"12"},{"size":207,"mtime":1607142076980,"results":"18","hashOfConfig":"12"},{"size":298,"mtime":1607141927192,"results":"19","hashOfConfig":"12"},{"size":1511,"mtime":1607150829699,"results":"20","hashOfConfig":"12"},{"size":326,"mtime":1607154152181,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11wvqdz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/index.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/reportWebVitals.js",[],["44","45"],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloProvider.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/apollo/ShootstaApolloClient.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/routes/Routes.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Header.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/NavBar.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Link.js",[],"/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/containers/video-upload.js",["46","47","48"],"import React, { useCallback } from 'react';\nimport gql from 'graphql-tag';\nimport { useDropzone } from 'react-dropzone';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loading from '../components/Loading';\n\nconst uploadFileMutation = gql`\n  mutation UploadFile($file: Upload!) {\n    uploadFile(file: $file)\n  }\n`;\n\nconst VideoUpload = props => {\n\n  const [uploadFile, { loading, data, error }] = useMutation(uploadFileMutation, {\n    // refetchQueries: [{ query: filesQuery }]\n  });\n\n  const onDrop = useCallback(\n    ([file]) => {\n      console.log('file in callback = ', file);\n      uploadFile({ variables: { file } });\n    },\n    [uploadFile]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n\n  if (loading) return <Loading />;\n\n  return (\n\n    <div className=\"container-form\">\n      <div className=\"row\">\n        <div className=\"offset-md-3 col-md-6\">\n          <div className=\"form-group files\">\n            <div {...getRootProps()}>\n              <input {...getInputProps()} className=\"form-control\" />\n              {isDragActive ? (\n                <p>Drop the files here ...</p>\n              ) : (\n                  <p>Drag 'n' drop some files here, or click to select files</p>\n                )}\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <ToastContainer />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default VideoUpload;\n","/home/jasonli/workspace/github-repo/shootsta-coding-test/simple-youtube/client/src/components/Loading.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":5,"column":26,"nodeType":"55","messageId":"56","endLine":5,"endColumn":31},{"ruleId":"53","severity":1,"message":"57","line":16,"column":33,"nodeType":"55","messageId":"56","endLine":16,"endColumn":37},{"ruleId":"53","severity":1,"message":"58","line":16,"column":39,"nodeType":"55","messageId":"56","endLine":16,"endColumn":44},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]